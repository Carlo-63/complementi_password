{"ast":null,"code":"import React,{useState}from'react';import'./App.css';/*\nDOCS\n\n- Caratteri Base (alfabeto minuscolo): 26\n- Maiuscole: 26\n- Numeri: 0...9 -> 10\n- Caratteri Speciali: 42 (su tastiera layout ITA)\n\n- TOTALE = 26 * 2 + 10 + 42 = 104\n\nCALCOLI\n\nPer trovare le combinazioni possibili (DISPOSIZIONI SEMPLICI) si usa la formula k^n, dove k è il punteggio (numero di char) e n è la lunghezza\n*/import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[punteggio,setPunteggio]=useState(26);const[carattSpeciali,setCarattSpeciali]=useState(false);const[maiuscole,setMaiuscole]=useState(false);const[numeri,setNumeri]=useState(false);const[lunghezza,setLunghezza]=useState();const[combinazioni,setCombinazioni]=useState(0);const calcola_combinazioni=()=>{if(lunghezza)setCombinazioni(Math.pow(punteggio,lunghezza));};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Calcolo password possibili\"}),/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{children:\"Caratteristiche\"}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"caratt_speciali\",checked:carattSpeciali,onClick:()=>{if(carattSpeciali)setPunteggio(punteggio-42);else setPunteggio(punteggio+42);setCarattSpeciali(!carattSpeciali);}}),\"Caratteri Speciali\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"maiuscole\",checked:maiuscole,onClick:()=>{if(maiuscole)setPunteggio(punteggio-26);else setPunteggio(punteggio+26);setMaiuscole(!maiuscole);}}),\"Maiuscole\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"numeri\",checked:numeri,onClick:()=>{if(numeri)setPunteggio(punteggio-10);else setPunteggio(punteggio+10);setNumeri(!numeri);}}),\"Numeri\"]})]}),/*#__PURE__*/_jsx(\"input\",{className:\"input_normale\",type:\"number\",placeholder:\"Lunghezza\",onChange:e=>setLunghezza(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>calcola_combinazioni(),children:\"Calcola\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Combinazioni: \",combinazioni]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","punteggio","setPunteggio","carattSpeciali","setCarattSpeciali","maiuscole","setMaiuscole","numeri","setNumeri","lunghezza","setLunghezza","combinazioni","setCombinazioni","calcola_combinazioni","Math","pow","className","children","type","name","checked","onClick","placeholder","onChange","e","target","value"],"sources":["/home/carlo/Scrivania/Sito Complementi di Matematica/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n\n/*\nDOCS\n\n- Caratteri Base (alfabeto minuscolo): 26\n- Maiuscole: 26\n- Numeri: 0...9 -> 10\n- Caratteri Speciali: 42 (su tastiera layout ITA)\n\n- TOTALE = 26 * 2 + 10 + 42 = 104\n\nCALCOLI\n\nPer trovare le combinazioni possibili (DISPOSIZIONI SEMPLICI) si usa la formula k^n, dove k è il punteggio (numero di char) e n è la lunghezza\n*/\n\n\nfunction App() {\n  const [punteggio, setPunteggio] = useState<number>(26);\n  const [carattSpeciali, setCarattSpeciali] = useState<boolean>(false);\n  const [maiuscole, setMaiuscole] = useState<boolean>(false);\n  const [numeri, setNumeri] = useState<boolean>(false);\n  const [lunghezza, setLunghezza] = useState<number>();\n\n  const [combinazioni, setCombinazioni] = useState<number>(0);\n\n  const calcola_combinazioni = (): void => {\n    if (lunghezza) setCombinazioni(Math.pow(punteggio, lunghezza));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Calcolo password possibili</h1>\n      <fieldset>\n        <legend>Caratteristiche</legend>\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"caratt_speciali\"\n            checked={carattSpeciali}\n            onClick={() => {\n              if (carattSpeciali) setPunteggio(punteggio - 42);\n              else setPunteggio(punteggio + 42);\n\n              setCarattSpeciali(!carattSpeciali);\n            }}\n          />\n          Caratteri Speciali\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"maiuscole\"\n            checked={maiuscole}\n            onClick={() => {\n              if (maiuscole) setPunteggio(punteggio - 26);\n              else setPunteggio(punteggio + 26);\n\n              setMaiuscole(!maiuscole);\n            }}\n          />\n          Maiuscole\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"numeri\"\n            checked={numeri}\n            onClick={() => {\n              if (numeri) setPunteggio(punteggio - 10);\n              else setPunteggio(punteggio + 10);\n\n              setNumeri(!numeri);\n            }}\n          />\n          Numeri\n        </label>\n      </fieldset>\n      <input className=\"input_normale\" type=\"number\" placeholder='Lunghezza' onChange={(e: any) => setLunghezza(e.target.value)}/>\n      <button onClick={() => calcola_combinazioni()}>Calcola</button>\n      <h2>Combinazioni: {combinazioni}</h2>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}